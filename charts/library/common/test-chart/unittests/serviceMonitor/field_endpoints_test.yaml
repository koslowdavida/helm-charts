---
# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: serviceMonitor - fields - endpoints
templates:
  - common.yaml
values:
  - ../_values/controllers_main_default_container.yaml
tests:
  - it: a serviceMonitor can be configured with regular endpoints
    set:
      serviceMonitor:
        main:
          labels:
            test.label: testvalue
          serviceName: "{{ .Release.Name }}"
          endpoints:
            - port: http
              scheme: http
              path: /metrics
              interval: 1m
              scrapeTimeout: 10s
    documentSelector:
      path: $[?(@.kind == "ServiceMonitor")].metadata.name
      value: release-name
    asserts:
      - equal:
          path: spec.namespaceSelector
          value:
            matchNames:
              - NAMESPACE
      - equal:
          path: spec.jobLabel
          value: release-name
      - equal:
          path: spec.selector.matchLabels
          value:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: RELEASE-NAME
            app.kubernetes.io/service: RELEASE-NAME
      - equal:
          path: spec.endpoints
          value:
            - port: http
              scheme: http
              path: /metrics
              interval: 1m
              scrapeTimeout: 10s
      - equal:
          path: metadata.labels
          value:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: RELEASE-NAME
            helm.sh/chart: common-test-1.0.0
            test.label: testvalue


  - it: a serviceMonitor can be configured with templated endpoints
    set:
      serviceMonitor:
        main:
          labels:
            test.label: testvalue
          serviceName: "{{ .Release.Name }}"
          endpoints:
            - port: http
              scheme: http
              path: /metrics
              interval: 1m
              scrapeTimeout: 10s
              basicAuth:
                username:
                  name: "{{.Release.Name}}-secret"
                  key: USERNAME
                password:
                  name: "{{.Release.Name}}-secret"
                  key: PASSWORD
    documentSelector:
      path: $[?(@.kind == "ServiceMonitor")].metadata.name
      value: release-name
    asserts:
      - equal:
          path: spec.endpoints
          value:
            - port: http
              scheme: http
              path: /metrics
              interval: 1m
              scrapeTimeout: 10s
              basicAuth:
                username:
                  name: RELEASE-NAME-secret
                  key: USERNAME
                password:
                  name: RELEASE-NAME-secret
                  key: PASSWORD
